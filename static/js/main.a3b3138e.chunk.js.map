{"version":3,"sources":["image/am.png","image/animationmusic.gif","image/not found.gif","image/avator.jpg","components/Search.jsx","util/utilHelper.js","components/SongContainer.jsx","components/DefaultPagr.jsx","services/config.js","services/common.js","services/api-services.js","actions/songs.js","action-list.js","view/SearchPage.jsx","components/AboutusContainer.jsx","view/Aboutus.jsx","view/Routes.js","components/Navigation.jsx","view/App.js","serviceWorker.js","reducers/songs.js","reducers/index.js","store.js","index.js","i18n/en.js"],"names":["module","exports","Search","Input","injectIntl","props","onSearch","className","placeholder","intl","formatMessage","id","type","onChange","e","target","value","enterButton","allowClear","utilHelper","debounce","delay","fn","timerID","args","clearTimeout","setTimeout","console","log","songsData","SongsCard","songs","map","item","imgUrl","artworkUrl100","substring","lastIndexOf","span","key","trackCensoredName","style","width","cover","alt","src","hoverable","trackName","previewUrl","controls","antIcon","LoadingOutlined","fontSize","spin","loader","noSong","noData","size","indicator","tip","musicman","domain","getSearchUrl","getSongs","params","options","url","config","method","term","axios","then","res","data","catch","error","response","fetchsongsInfo","dispatch","results","length","payload","alert","err","Sider","Layout","Content","useState","setData","setLoader","setnoSong","useSelector","state","useDispatch","useCallback","fetchSongs","onSearchHandler","setSongsData","useEffect","NoSongFound","count","onMenuClick","event","window","open","theme","href","applemusic","Item","onClick","padding","overflow","openModal","setopenModal","closeModal","title","to","Avator","visible","onOk","onCancel","GithubOutlined","twoToneColor","LinkedinOutlined","InstagramOutlined","Aboutpage","withRouter","component","SearchPage","path","exact","Header","AppleFilled","mode","App","basename","Boolean","location","hostname","match","initialState","fetchSongsInfo","action","resultCount","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","history","createBrowserHistory","router","routerMiddleware","middleware","applyMiddleware","thunk","store","createStore","reducer","ReactDOM","render","StrictMode","locale","messages","MUSIC","BROWSE","GO_TO_ITUNES_API","APPLE_MUSIC","LOADING","LIST_OF_SEARCHED_SONG","NO_OF_SONGS","MODAL_DEVELOPER_NAME","MODAL_DEVELOPER_SKILLS","LISTEN_TO_SONGS","ABOUT_APPLE_PAGE_HEADING","WE_CAN_SAERCH_BY_ARTIST","NO_SONGS_FOUND","SEARCH_YOUR_SONGS","SEARCH_SONGS","DEVELOPER_QUALIFICATION","ABOUT","TRACK_NAME","BROWSER_AUDIO_SUPPORT_MSG","NO_SONG_FOUND","SEARCH_YOUR_FAVOURITE_MUSIC","ABOUT_PAGE_INFO","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a3b3138e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/am.cbbfe8b0.png\";","module.exports = __webpack_public_path__ + \"static/media/animationmusic.d38ea919.gif\";","module.exports = __webpack_public_path__ + \"static/media/not found.edd64b4b.gif\";","module.exports = __webpack_public_path__ + \"static/media/avator.39762912.jpg\";","import React from 'react';\nimport {Layout, Input} from 'antd';\nimport {FormattedMessage, injectIntl} from 'react-intl';\n\nimport en from '../i18n/en.js';\n\nconst {Search} = Input;\nconst SearchInput = props => {\n  const {onSearch} = props;\n\n  return (\n    <div className=\"searchinput-container d-flex center align-items-center\">\n      <Search\n        placeholder={props.intl.formatMessage ({id: 'SEARCH_YOUR_SONGS'})}\n        type=\"text\"\n        className=\"searchInput\"\n        onChange={e => props.onSearch (e && e.target ? e.target.value : '')}\n        enterButton\n        allowClear\n      />\n    </div>\n  );\n};\nexport default injectIntl (SearchInput);\n","function debounce(delay,fn){\n   let timerID;\n   return function (...args) {\n     if(timerID){\n       clearTimeout(timerID)\n     }\n     timerID =setTimeout(()=>{\n        fn(...args);\n        timerID=null;\n\n     },delay)\n   };\n}\nconst utilHelper ={\ndebounce\n}\nexport default utilHelper;","import React from 'react';\nimport {Card, Row, Col} from 'antd';\nimport {FormattedMessage, injectIntl} from 'react-intl';\n\nconst SongContainer = props => {\n  console.log (props.songsData, 'songs data');\n\n  const SongsCard =\n    props.songsData.songs &&\n    props.songsData.songs.map (item => {\n      const imgUrl = item.artworkUrl100.substring (\n        0,\n        item.artworkUrl100.lastIndexOf ('source/')\n      );\n\n      return (\n        <Col span={8} key={item.trackCensoredName} className=\"car-container\">\n          <Card\n            style={{width: 300}}\n            className=\"card\"\n            cover={\n              <img\n                alt={item.trackCensoredName}\n                src={\n                  `${imgUrl}/source/372x272bb.jpg` || `${item.artworkUrl600}`\n                }\n              />\n            }\n            hoverable\n          >\n            <marquee>\n              <h5>\n                <span className=\"card-title\">\n                  <span>\n                    <FormattedMessage id=\"TRACK_NAME\" />{item.trackName}\n                  </span>\n                </span>\n              </h5>\n            </marquee>\n            <p className=\"card-text\">\n              Some quick example text to build on the card title and make up the bulk of the card's content.\n            </p>\n            <audio className=\"audio\" src={item.previewUrl} controls>\n              <FormattedMessage id=\"BROWSER_AUDIO_SUPPORT_MSG\" />\n            </audio>\n          </Card>\n        </Col>\n      );\n    });\n\n  return (\n    <div>\n      <Row className=\"container \">\n        {SongsCard}\n      </Row>\n    </div>\n  );\n};\nexport default injectIntl (SongContainer);\n","import React from 'react'\nimport musicman from'../image/animationmusic.gif';\nimport noData from'../image/not found.gif';\nimport {Space,Spin} from 'antd'\nimport { LoadingOutlined,SearchOutlined } from '@ant-design/icons';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 50 }} spin />;\n\nconst DefaultPage= (props) =>{\n  const{loader,noSong}= props\n\nreturn(\n<>\n<div className=\"defaultpage-container d-flex justify-content-center align-items-center flex-column\">\n  <h3 className=\"tracking-in-expand\">\n    {noSong && !loader\n      ? <FormattedMessage id=\"NO_SONG_FOUND\" />\n      : <FormattedMessage id=\"SEARCH_YOUR_FAVOURITE_MUSIC\" />}\n  </h3>\n  <div className=\"defaultPage-imgholder d-flex justify-content-center align-items-center\">\n    {noSong && !loader\n      ? <img\n          src={noData}\n          alt={props.intl.formatMessage ({id: 'NO_SONGS_FOUND'})}\n          width=\"50%\"\n        />\n      : loader\n          ? <Space\n              size=\"middle\"\n              className=\"d-flex align-items-center justify-content-center\"\n            >\n              <Spin\n                indicator={antIcon}\n                tip={<FormattedMessage id=\"LOADING\" />}\n                size=\"large\"\n              />\n            </Space>\n          : <img src={musicman} alt=\"welcome\" width=\"100%\" />}\n  </div>\n\n</div>;\n\n\n</>\n)\n\n}\nexport default injectIntl(DefaultPage);\n","const URL ='https://itunes.apple.com';\n\nconst domain = {\ngetSearchUrl(){\n  return `${URL}/search`;\n}\n}\nexport default domain\n","import {apiService} from './api-services'\nimport config from './config'\n\n\nexport const getSongs= (params) =>{\n  const url = `${config.getSearchUrl()}`;\nconsole.log(url)\n  return apiService({\n    url,\n    method:'GET',\n    params:{\n     term:params\n    }\n  }).then(res =>{\n      return res;\n    })\n};","import axios from 'axios';\n\n\nexport const apiService= (options) =>{\n// const request={\n//     ...options,\n//    dataType:'json',\n//    // headers:{\n//    //  'Access-Control-Allow-Origin': '*',\n//    //  'Access-Control-Allow-Credentials': true,\n//    //   'Accept':'application/json',\n//    //   'content-type':'application/json',\n//    //    'Accept-Language':'en-US'\n//    // }\n\n// }\n\nreturn axios(options)\n.then(res =>{\n   if(res && res.data){\n     return res.data\n   }\n})\n.catch(error =>{\n   return {...error.response}\n})\n\n}\n\n","\nimport  {SONG_FETCHED,SONG_FAILURE} from '../action-list'\nimport {getSongs} from '../services/common'\n\nconst fetchsongsInfo=(params)=>{\n  return  (dispatch) =>{\n      try{\n        dispatch({type:''});\n        getSongs(params).then(res=>{\n          if(res.results.length){\n            dispatch({type:SONG_FETCHED,payload:res})\n          }\n          dispatch({type:SONG_FETCHED,payload:res,alert:true})\n        })\n      }\n      catch(err){\n          dispatch({type:SONG_FAILURE,payload:{}})\n      }\n  }\n}\nexport default fetchsongsInfo\n","export const SONG_FETCHED='SONG_FETCHED';\nexport const SONG_FAILURE='SONG_FAILURE'","//imported  from library\nimport React, {useState, useCallback, useEffect} from 'react';\nimport {Layout, Menu, Button} from 'antd';\nimport {useSelector, useDispatch} from 'react-redux';\nimport applemusic from '../image/am.png';\nimport {FormattedMessage, injectIntl} from 'react-intl';\n\n// local imported files\nimport Search from '../components/Search';\nimport utilHelper from '../util/utilHelper';\nimport SongContainer from '../components/SongContainer';\nimport DefaultPage from '../components/DefaultPagr';\nimport fetchSongs from '../actions/songs.js';\n\nconst {Sider, Content} = Layout;\n\nconst SearchPage = props => {\n  const [data, setData] = useState ();\n  const [loader, setLoader] = useState (false);\n  const [noSong, setnoSong] = useState (false);\n  const songsData = useSelector (state => state.songs);\n  const dispatch = useDispatch ();\n\n  const onSearch = useCallback (\n    params => {\n      console.log (params);\n      params\n        ? utilHelper.debounce (300, onSearchHandler (params))\n        : setSongsData ('');\n    },\n    [data]\n  );\n\n  useEffect (\n    () => {\n      const {songs, alert} = songsData;\n      songsData && songs.length\n        ? setSongsData (songsData)\n        : alert ? NoSongFound () : setSongsData ();\n      setLoader (false);\n    },\n    [songsData]\n  );\n\n  const setSongsData = songsData => {\n    songsData\n      ? setData ({\n          count: songsData.count,\n          songs: songsData.songs,\n        })\n      : setData ('');\n  };\n\n  const NoSongFound = () => {\n    setnoSong (true);\n    setData ('');\n  };\n\n  function onSearchHandler (params) {\n    setLoader (true);\n    dispatch (fetchSongs (params));\n  }\n\n  const onMenuClick = event => {\n    switch (+event.key) {\n      case 1:\n        return window.open ();\n\n      case 2:\n        return window.open (\n          'https://affiliate.itunes.apple.com/resources/documentation/itunes-store-web-service-search-api/'\n        );\n\n      case 3:\n        return window.open ('https://www.apple.com/in/music/');\n      default:\n        break;\n    }\n  };\n  console.log (songsData);\n  return (\n    <div>\n      <Layout>\n        <div className=\"sider-menu\">\n          <Sider\n            width={300}\n            theme=\"light\"\n            className=\"site-layout-background  side-menuContainer sticky-top\"\n          >\n            <Search onSearch={onSearch} />\n            <Menu theme=\"light\" className=\"side-menu \">\n              <Button\n                href=\"https://music.apple.com/us/for-you\"\n                type=\"danger\"\n                className=\"d-flex p-3 Browse-btn  align-items-center justify-content-around\"\n              >\n                <span className=\"mr-3\">\n                  <img src={applemusic} width=\"30px\" />\n                </span>\n                <span className=\"menu-item-text\">\n                  {<FormattedMessage id=\"BROWSE\" />}\n                </span>\n              </Button>\n              <Menu.Item key=\"2\" onClick={e => onMenuClick (e)}>\n                <span className=\"menu-item-text\">\n                  {<FormattedMessage id=\"GO_TO_ITUNES_API\" />}\n                </span>\n              </Menu.Item>\n              <Menu.Item key=\"3\" onClick={e => onMenuClick (e)}>\n                <span className=\"menu-item-text\">\n                  {<FormattedMessage id=\"APPLE_MUSIC\" />}\n                </span>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n        </div>\n        <Layout style={{padding: '0 24px 24px', overflow: 'hidden'}}>\n\n          <Content\n            className=\"site-layout-background container-fluid containt\"\n            style={{overflow: 'initial'}}\n          >\n            <div className=\" d-flex justify-content-between pb-5 p-2\">\n              <span className=\"content-heading-listofsong\">\n                <h5><FormattedMessage id=\"LIST_OF_SEARCHED_SONG\" /> </h5>\n              </span>\n              <span>\n                <h5>\n                  <FormattedMessage id=\"NO_OF_SONGS\" />: {data ? data.count : 0}\n                </h5>\n              </span>\n            </div>\n            {data\n              ? <SongContainer songsData={data} />\n              : <DefaultPage loader={loader} noSong={noSong} />}\n          </Content>\n        </Layout>\n      </Layout>\n    </div>\n  );\n};\nexport default injectIntl (SearchPage);\n","import React, {useState} from 'react';\nimport {Row, Col, Avatar, Button, Modal} from 'antd';\nimport {\n  GithubOutlined,\n  LinkedinOutlined,\n  InstagramOutlined,\n} from '@ant-design/icons';\nimport {Link} from 'react-router-dom';\nimport {FormattedMessage, injectIntl} from 'react-intl';\n\nimport Avator from '../image/avator.jpg';\n\nconst Aboutus = () => {\n  const itunesUrl =\n    'https://affiliate.itunes.apple.com/resources/documentation/itunes-store-web-service-search-api/';\n  const [openModal, setopenModal] = useState (false);\n\n  const showModal = e => {\n    setopenModal (true);\n  };\n\n  const closeModal = e => {\n    setopenModal (false);\n  };\n\n  return (\n    <div className=\"About-page-Outer\">\n      <Row>\n        <Col span={12}>\n          <div className=\"Aboutus-body-cotainer container\">\n            <div>\n              <h3> <FormattedMessage id=\"ABOUT_APPLE_PAGE_HEADING\" /></h3>\n              <div>\n                <p>\n                  This Web Application is made as an assignment  as well as for trial of\n                  {' '}\n                  <a href={itunesUrl} title=\"Go to itunes API page\">\n                    Itunes Api\n                  </a>\n                  . This is not an official or a complete web application by any means.\n                </p>\n                <p className=\"font-weight-bold\">\n                  <FormattedMessage id=\"WE_CAN_SAERCH_BY_ARTIST\" />\n                </p>\n                <ul className=\"pl-3\">\n                  <li>\n                    Search the songs In the search box on\n                    {' '}\n                    <Link\n                      to=\"/\"\n                      title=\"Go to Search Page\"\n                      className=\"Seach-page-link\"\n                    >\n                      Search page.\n                    </Link>\n                  </li>\n                  <li><FormattedMessage id=\"LISTEN_TO_SONGS\" /></li>\n                </ul>\n              </div>\n            </div>\n\n          </div>\n        </Col>\n        <Col span={12}>\n          <div className=\"d-flex justify-content-center align-items-center flex-column developer-infoholder\">\n            <Avatar size={240} src={Avator} />\n            <Button\n              type=\"primary\"\n              className=\"mt-3\"\n              onClick={() => showModal ()}\n            >\n              See details\n            </Button>\n          </div>\n          {openModal\n            ? <Modal\n                title={<span className=\"Modal-title\">About developer</span>}\n                className=\"about-page-modal\"\n                visible={true}\n                onOk={closeModal}\n                onCancel={closeModal}\n              >\n                <p className=\"Modal-description\">\n                  {' '}<FormattedMessage id=\"MODAL_DEVELOPER_NAME\" />\n                </p>\n                <p className=\"Modal-description\">\n                  <span>Skills:</span>\n                  <span><FormattedMessage id=\"MODAL_DEVELOPER_SKILLS\" /></span>\n                </p>\n                <p className=\"Modal-description\">\n                  <span>Qualification:</span>\n                  <span><FormattedMessage id=\"DEVELOPER_QUALIFICATION\" /></span>\n                </p>\n                <div className=\"Modal-social-links-container d-flex justify-content-center\">\n                  <div className=\"d-flex justify-content-between\">\n                    <span\n                      className=\"Modal-social-links github\"\n                      title=\"Go to Github\"\n                    >\n                      <a href=\"https://github.com/RAJNISHMSHRA\">\n                        <GithubOutlined twoToneColor=\"black\" />\n                      </a>\n                    </span>\n                    <span\n                      className=\"Modal-social-links linkdn\"\n                      title=\"Go to linkdin\"\n                    >\n                      <a href=\"https://www.linkedin.com/in/rajnish-mishra97/\">\n                        <LinkedinOutlined />\n                      </a>\n                    </span>\n                    <a href=\"#\">\n                      <span\n                        className=\"Modal-social-links instagram\"\n                        title=\"Go to instagram\"\n                      >\n                        <InstagramOutlined twoToneColor=\"#e83e8c\" />\n                      </span>\n                    </a>\n                  </div>\n                </div>\n              </Modal>\n            : ''}\n        </Col>\n      </Row>\n    </div>\n  );\n};\nexport default injectIntl (Aboutus);\n","import React from 'react'\nimport Aboutus from '../components/AboutusContainer'\n\nconst Aboutpage = () =>{\n  return(\n    <div>\n      <Aboutus />\n    </div>\n  )\n}\nexport default Aboutpage","import React from 'react'\nimport {Route, Switch, withRouter} from 'react-router-dom'\nimport {createHashHistory} from 'history'\n\nimport Home from './Home';\nimport SearchPage from './SearchPage';\nimport Aboutpage from './Aboutus';\n\n\n\nconst Routes = () =>{\nreturn (\n  <Switch >\n    <Route component={SearchPage}  path={'/'} exact />\n    <Route component={Aboutpage}  path={'/Aboutus'} exact/>\n    <Route component={SearchPage}  path={'/SearchPage'} exact/>\n    <Route/>\n  </Switch>\n)\n}\n\nexport default withRouter(Routes);\n","import React from 'react';\nimport {Layout, Menu, Breadcrumb, Input} from 'antd';\nimport {Link} from 'react-router-dom';\nimport {AppleFilled} from '@ant-design/icons';\nimport {FormattedMessage, injectIntl} from 'react-intl';\n\nconst {Header} = Layout;\n\nconst Navigation = () => {\n  return (\n    <Layout>\n      <Header className=\"header\">\n        <div className=\"logo\">\n          <h1 className=\"LogoText d-flex justify-content-center\">\n            <AppleFilled twoToneColor=\"#fff\" className=\"apple-logo\" />\n            {' '}\n            <span className=\"ml-1\">{<FormattedMessage id=\"MUSIC\" />}</span>\n          </h1>\n        </div>\n        <Menu theme=\"dark\" mode=\"horizontal\" className=\"nav-menu \">\n          <Menu.Item key=\"1\">\n            <Link to={'/SearchPage'}>\n              <FormattedMessage id=\"SEARCH_SONGS\" />\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <Link to={'/Aboutus'}><FormattedMessage id=\"ABOUT\" /></Link>\n          </Menu.Item>\n        </Menu>\n        <p className=\"signature\">@Rajnish Mishra</p>\n      </Header>\n    </Layout>\n  );\n};\n\nexport default injectIntl (Navigation);\n","import React from 'react';\nimport './App.css';\nimport {HashRouter as Router} from 'react-router-dom'\n\n\n\nimport Routes from './Routes'\nimport Navigation from '../components/Navigation'\n\n\nconst App = () =>{\n  return (\n    <Router basename={'/'} >\n    <div className=\"App\">\n        <Navigation />\n        <Routes />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {SONG_FETCHED,SONG_FAILURE} from '../action-list'\n\nconst initialState={\n  count:0,\n  songs:[]\n}\n\nconst fetchSongsInfo=(state=initialState,action)=>{\n switch (action.type) {\n   case SONG_FETCHED:\n    return{\n      count:action.payload.resultCount,\n      songs:action.payload.results,\n      alert:action.alert\n    }\n    case SONG_FAILURE:\n      return{\n        count:0,\n        songs:[]\n      }\n\n   default:\n     return state;\n }\n}\nexport default fetchSongsInfo\n","import {combineReducers} from 'redux';\nimport songs from './songs'\n\nconst rootReducer=combineReducers({\n songs\n})\nexport default rootReducer","import {createStore,compose,applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {routerMiddleware} from 'react-router-redux'\nimport {createBrowserHistory} from 'history'\n\nimport reducer from './reducers/index'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst history = createBrowserHistory();\nconst router = routerMiddleware(history);\nconst middleware = composeEnhancers(applyMiddleware(thunk, router));\n\nconst store=createStore(\nreducer,\nmiddleware\n)\n\nexport default store\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './view/App';\nimport '../src/css/style.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport {IntlProvider} from 'react-intl';\nimport en from './i18n/en';\n\nReactDOM.render (\n  <React.StrictMode>\n    <IntlProvider locale=\"en\" messages={en}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById ('root')\n);\n\nserviceWorker.unregister ();\n","export default {\n  MUSIC: 'Music',\n  BROWSE: 'Browse',\n  GO_TO_ITUNES_API: 'Go to Itunes API',\n  APPLE_MUSIC: 'Apple Music',\n  LOADING: 'Loading...',\n  LIST_OF_SEARCHED_SONG: 'List of Searched song',\n  NO_OF_SONGS: 'Songs ',\n  MODAL_DEVELOPER_NAME: 'Name: Rajnish Mishra',\n  MODAL_DEVELOPER_SKILLS: 'React js, React Hooks, Javascript, html5, css3',\n  LISTEN_TO_SONGS: 'Listen to songs or buy the songs on Apple Music Store.',\n  ABOUT_APPLE_PAGE_HEADING: 'About Apple Music Web Application Demo Page',\n  WE_CAN_SAERCH_BY_ARTIST: 'We can search by Song/Artist/Album name.',\n  NO_SONGS_FOUND: 'No songs found',\n  SEARCH_YOUR_SONGS: 'Search Your Songs',\n  SEARCH_SONGS: 'Search Songs',\n  DEVELOPER_QUALIFICATION: 'B.E (Computer Science  & Engg.)',\n  ABOUT: 'About',\n  TRACK_NAME: 'Track Name:',\n  BROWSER_AUDIO_SUPPORT_MSG: 'Your browser does not support the audio element.',\n  NO_SONG_FOUND: 'No Songs found!!',\n  SEARCH_YOUR_FAVOURITE_MUSIC: 'Search your Favourite Music Here',\n  ABOUT_PAGE_INFO: 'Some quick example text to build on the card title and make up the bulk of the card\"s content.',\n};\n"],"sourceRoot":""}